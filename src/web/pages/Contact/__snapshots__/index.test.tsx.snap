// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/pages/Contact <Contact /> snapshots should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Contact
    history={
      MockHistory {
        "action": "POP",
        "block": [MockFunction],
        "createHref": [MockFunction],
        "go": [MockFunction],
        "goBack": [MockFunction],
        "goForward": [MockFunction],
        "length": 2,
        "listen": [MockFunction],
        "location": MockLocation {
          "hash": "",
          "key": "",
          "pathname": "/",
          "search": "",
          "state": Object {},
        },
        "push": [MockFunction],
        "replace": [MockFunction],
      }
    }
    location={
      MockLocation {
        "hash": "",
        "key": "",
        "pathname": "/",
        "search": "",
        "state": Object {},
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
    staticContext={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <h1>
        Contact
      </h1>,
      "title": "Contact",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Contact",
      },
      "ref": null,
      "rendered": "Contact",
      "type": "h1",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <h1>
          Contact
        </h1>,
        "title": "Contact",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Contact",
        },
        "ref": null,
        "rendered": "Contact",
        "type": "h1",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
