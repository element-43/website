// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src/components/Page <Page /> snapshots should match the snapshot with default props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Page>
    <h1>
      Hello human
    </h1>
  </Page>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Element 43
          </title>
          <meta
            content="Not just an element!"
            name="description"
          />
          <meta
            content="Not just an element!"
            name="twitter:description"
          />
          <meta
            content="about://blankassets/images/home_image.jpg"
            name="twitter:image"
          />
          <meta
            content="Element 43"
            name="twitter:title"
          />
          <meta
            content="Not just an element!"
            name="og:description"
          />
          <meta
            content="about://blankassets/images/home_image.jpg"
            name="og:image"
          />
          <meta
            content="Element 43"
            name="og:title"
          />
          <meta
            content="website"
            name="og:type"
          />
          <meta
            content="about://blank"
            name="og:url"
          />
        </HelmetWrapper>,
        <MobileLayout>
          <withRouter(Connect(MobileHeader))
            menu={
              Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ]
            }
          />
        </MobileLayout>,
        <DesktopLayout>
          <Header
            menu={
              Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ]
            }
          />
        </DesktopLayout>,
        <styled.main>
          <h1>
            Hello human
          </h1>
        </styled.main>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <title>
              Element 43
            </title>,
            <meta
              content="Not just an element!"
              name="description"
            />,
            <meta
              content="Not just an element!"
              name="twitter:description"
            />,
            <meta
              content="about://blankassets/images/home_image.jpg"
              name="twitter:image"
            />,
            <meta
              content="Element 43"
              name="twitter:title"
            />,
            <meta
              content="Not just an element!"
              name="og:description"
            />,
            <meta
              content="about://blankassets/images/home_image.jpg"
              name="og:image"
            />,
            <meta
              content="Element 43"
              name="og:title"
            />,
            <meta
              content="website"
              name="og:type"
            />,
            <meta
              content="about://blank"
              name="og:url"
            />,
          ],
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Element 43",
            },
            "ref": null,
            "rendered": "Element 43",
            "type": "title",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Not just an element!",
              "name": "description",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Not just an element!",
              "name": "twitter:description",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "about://blankassets/images/home_image.jpg",
              "name": "twitter:image",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Element 43",
              "name": "twitter:title",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Not just an element!",
              "name": "og:description",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "about://blankassets/images/home_image.jpg",
              "name": "og:image",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Element 43",
              "name": "og:title",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "website",
              "name": "og:type",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "about://blank",
              "name": "og:url",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <withRouter(Connect(MobileHeader))
            menu={
              Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ]
            }
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "menu": Array [
              Object {
                "path": "/about",
                "title": "About",
              },
              Object {
                "path": "/portfolio",
                "title": "Portfolio",
              },
              Object {
                "path": "/contact",
                "title": "Contact",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Header
            menu={
              Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ]
            }
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "menu": Array [
              Object {
                "path": "/about",
                "title": "About",
              },
              Object {
                "path": "/portfolio",
                "title": "Portfolio",
              },
              Object {
                "path": "/contact",
                "title": "Contact",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <h1>
            Hello human
          </h1>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Hello human",
          },
          "ref": null,
          "rendered": "Hello human",
          "type": "h1",
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Element 43
            </title>
            <meta
              content="Not just an element!"
              name="description"
            />
            <meta
              content="Not just an element!"
              name="twitter:description"
            />
            <meta
              content="about://blankassets/images/home_image.jpg"
              name="twitter:image"
            />
            <meta
              content="Element 43"
              name="twitter:title"
            />
            <meta
              content="Not just an element!"
              name="og:description"
            />
            <meta
              content="about://blankassets/images/home_image.jpg"
              name="og:image"
            />
            <meta
              content="Element 43"
              name="og:title"
            />
            <meta
              content="website"
              name="og:type"
            />
            <meta
              content="about://blank"
              name="og:url"
            />
          </HelmetWrapper>,
          <MobileLayout>
            <withRouter(Connect(MobileHeader))
              menu={
                Array [
                  Object {
                    "path": "/about",
                    "title": "About",
                  },
                  Object {
                    "path": "/portfolio",
                    "title": "Portfolio",
                  },
                  Object {
                    "path": "/contact",
                    "title": "Contact",
                  },
                ]
              }
            />
          </MobileLayout>,
          <DesktopLayout>
            <Header
              menu={
                Array [
                  Object {
                    "path": "/about",
                    "title": "About",
                  },
                  Object {
                    "path": "/portfolio",
                    "title": "Portfolio",
                  },
                  Object {
                    "path": "/contact",
                    "title": "Contact",
                  },
                ]
              }
            />
          </DesktopLayout>,
          <styled.main>
            <h1>
              Hello human
            </h1>
          </styled.main>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <title>
                Element 43
              </title>,
              <meta
                content="Not just an element!"
                name="description"
              />,
              <meta
                content="Not just an element!"
                name="twitter:description"
              />,
              <meta
                content="about://blankassets/images/home_image.jpg"
                name="twitter:image"
              />,
              <meta
                content="Element 43"
                name="twitter:title"
              />,
              <meta
                content="Not just an element!"
                name="og:description"
              />,
              <meta
                content="about://blankassets/images/home_image.jpg"
                name="og:image"
              />,
              <meta
                content="Element 43"
                name="og:title"
              />,
              <meta
                content="website"
                name="og:type"
              />,
              <meta
                content="about://blank"
                name="og:url"
              />,
            ],
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Element 43",
              },
              "ref": null,
              "rendered": "Element 43",
              "type": "title",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Not just an element!",
                "name": "description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Not just an element!",
                "name": "twitter:description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "about://blankassets/images/home_image.jpg",
                "name": "twitter:image",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Element 43",
                "name": "twitter:title",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Not just an element!",
                "name": "og:description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "about://blankassets/images/home_image.jpg",
                "name": "og:image",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Element 43",
                "name": "og:title",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "website",
                "name": "og:type",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "about://blank",
                "name": "og:url",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <withRouter(Connect(MobileHeader))
              menu={
                Array [
                  Object {
                    "path": "/about",
                    "title": "About",
                  },
                  Object {
                    "path": "/portfolio",
                    "title": "Portfolio",
                  },
                  Object {
                    "path": "/contact",
                    "title": "Contact",
                  },
                ]
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "menu": Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Header
              menu={
                Array [
                  Object {
                    "path": "/about",
                    "title": "About",
                  },
                  Object {
                    "path": "/portfolio",
                    "title": "Portfolio",
                  },
                  Object {
                    "path": "/contact",
                    "title": "Contact",
                  },
                ]
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "menu": Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <h1>
              Hello human
            </h1>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hello human",
            },
            "ref": null,
            "rendered": "Hello human",
            "type": "h1",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`src/components/Page <Page /> snapshots should match the snapshot with the optional props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Page
    title="Funny, I think this is the beginning..."
  >
    <h1>
      Hello human
    </h1>
  </Page>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Funny, I think this is the beginning...
          </title>
          <meta
            content="Not just an element!"
            name="description"
          />
          <meta
            content="Not just an element!"
            name="twitter:description"
          />
          <meta
            content="about://blankassets/images/home_image.jpg"
            name="twitter:image"
          />
          <meta
            content="Funny, I think this is the beginning..."
            name="twitter:title"
          />
          <meta
            content="Not just an element!"
            name="og:description"
          />
          <meta
            content="about://blankassets/images/home_image.jpg"
            name="og:image"
          />
          <meta
            content="Funny, I think this is the beginning..."
            name="og:title"
          />
          <meta
            content="website"
            name="og:type"
          />
          <meta
            content="about://blank"
            name="og:url"
          />
        </HelmetWrapper>,
        <MobileLayout>
          <withRouter(Connect(MobileHeader))
            menu={
              Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ]
            }
          />
        </MobileLayout>,
        <DesktopLayout>
          <Header
            menu={
              Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ]
            }
          />
        </DesktopLayout>,
        <styled.main>
          <h1>
            Hello human
          </h1>
        </styled.main>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <title>
              Funny, I think this is the beginning...
            </title>,
            <meta
              content="Not just an element!"
              name="description"
            />,
            <meta
              content="Not just an element!"
              name="twitter:description"
            />,
            <meta
              content="about://blankassets/images/home_image.jpg"
              name="twitter:image"
            />,
            <meta
              content="Funny, I think this is the beginning..."
              name="twitter:title"
            />,
            <meta
              content="Not just an element!"
              name="og:description"
            />,
            <meta
              content="about://blankassets/images/home_image.jpg"
              name="og:image"
            />,
            <meta
              content="Funny, I think this is the beginning..."
              name="og:title"
            />,
            <meta
              content="website"
              name="og:type"
            />,
            <meta
              content="about://blank"
              name="og:url"
            />,
          ],
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Funny, I think this is the beginning...",
            },
            "ref": null,
            "rendered": "Funny, I think this is the beginning...",
            "type": "title",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Not just an element!",
              "name": "description",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Not just an element!",
              "name": "twitter:description",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "about://blankassets/images/home_image.jpg",
              "name": "twitter:image",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Funny, I think this is the beginning...",
              "name": "twitter:title",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Not just an element!",
              "name": "og:description",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "about://blankassets/images/home_image.jpg",
              "name": "og:image",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Funny, I think this is the beginning...",
              "name": "og:title",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "website",
              "name": "og:type",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "about://blank",
              "name": "og:url",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <withRouter(Connect(MobileHeader))
            menu={
              Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ]
            }
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "menu": Array [
              Object {
                "path": "/about",
                "title": "About",
              },
              Object {
                "path": "/portfolio",
                "title": "Portfolio",
              },
              Object {
                "path": "/contact",
                "title": "Contact",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Header
            menu={
              Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ]
            }
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "menu": Array [
              Object {
                "path": "/about",
                "title": "About",
              },
              Object {
                "path": "/portfolio",
                "title": "Portfolio",
              },
              Object {
                "path": "/contact",
                "title": "Contact",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <h1>
            Hello human
          </h1>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Hello human",
          },
          "ref": null,
          "rendered": "Hello human",
          "type": "h1",
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Funny, I think this is the beginning...
            </title>
            <meta
              content="Not just an element!"
              name="description"
            />
            <meta
              content="Not just an element!"
              name="twitter:description"
            />
            <meta
              content="about://blankassets/images/home_image.jpg"
              name="twitter:image"
            />
            <meta
              content="Funny, I think this is the beginning..."
              name="twitter:title"
            />
            <meta
              content="Not just an element!"
              name="og:description"
            />
            <meta
              content="about://blankassets/images/home_image.jpg"
              name="og:image"
            />
            <meta
              content="Funny, I think this is the beginning..."
              name="og:title"
            />
            <meta
              content="website"
              name="og:type"
            />
            <meta
              content="about://blank"
              name="og:url"
            />
          </HelmetWrapper>,
          <MobileLayout>
            <withRouter(Connect(MobileHeader))
              menu={
                Array [
                  Object {
                    "path": "/about",
                    "title": "About",
                  },
                  Object {
                    "path": "/portfolio",
                    "title": "Portfolio",
                  },
                  Object {
                    "path": "/contact",
                    "title": "Contact",
                  },
                ]
              }
            />
          </MobileLayout>,
          <DesktopLayout>
            <Header
              menu={
                Array [
                  Object {
                    "path": "/about",
                    "title": "About",
                  },
                  Object {
                    "path": "/portfolio",
                    "title": "Portfolio",
                  },
                  Object {
                    "path": "/contact",
                    "title": "Contact",
                  },
                ]
              }
            />
          </DesktopLayout>,
          <styled.main>
            <h1>
              Hello human
            </h1>
          </styled.main>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <title>
                Funny, I think this is the beginning...
              </title>,
              <meta
                content="Not just an element!"
                name="description"
              />,
              <meta
                content="Not just an element!"
                name="twitter:description"
              />,
              <meta
                content="about://blankassets/images/home_image.jpg"
                name="twitter:image"
              />,
              <meta
                content="Funny, I think this is the beginning..."
                name="twitter:title"
              />,
              <meta
                content="Not just an element!"
                name="og:description"
              />,
              <meta
                content="about://blankassets/images/home_image.jpg"
                name="og:image"
              />,
              <meta
                content="Funny, I think this is the beginning..."
                name="og:title"
              />,
              <meta
                content="website"
                name="og:type"
              />,
              <meta
                content="about://blank"
                name="og:url"
              />,
            ],
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Funny, I think this is the beginning...",
              },
              "ref": null,
              "rendered": "Funny, I think this is the beginning...",
              "type": "title",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Not just an element!",
                "name": "description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Not just an element!",
                "name": "twitter:description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "about://blankassets/images/home_image.jpg",
                "name": "twitter:image",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Funny, I think this is the beginning...",
                "name": "twitter:title",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Not just an element!",
                "name": "og:description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "about://blankassets/images/home_image.jpg",
                "name": "og:image",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Funny, I think this is the beginning...",
                "name": "og:title",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "website",
                "name": "og:type",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "about://blank",
                "name": "og:url",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <withRouter(Connect(MobileHeader))
              menu={
                Array [
                  Object {
                    "path": "/about",
                    "title": "About",
                  },
                  Object {
                    "path": "/portfolio",
                    "title": "Portfolio",
                  },
                  Object {
                    "path": "/contact",
                    "title": "Contact",
                  },
                ]
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "menu": Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Header
              menu={
                Array [
                  Object {
                    "path": "/about",
                    "title": "About",
                  },
                  Object {
                    "path": "/portfolio",
                    "title": "Portfolio",
                  },
                  Object {
                    "path": "/contact",
                    "title": "Contact",
                  },
                ]
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "menu": Array [
                Object {
                  "path": "/about",
                  "title": "About",
                },
                Object {
                  "path": "/portfolio",
                  "title": "Portfolio",
                },
                Object {
                  "path": "/contact",
                  "title": "Contact",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <h1>
              Hello human
            </h1>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hello human",
            },
            "ref": null,
            "rendered": "Hello human",
            "type": "h1",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
