// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/Page/components/Header <Header /> snapshots should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    menu={
      Array [
        Object {
          "path": "/fancy",
          "title": "Fancy app you got here",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div>
        <styled.div>
          <Link
            replace={false}
            to="/"
          >
            <BannerLogoSvg
              color="#fff"
              hoverColor="#2ecc71"
              size="4rem"
            />
          </Link>
          <styled.nav>
            <Styled(Link)
              to="/fancy"
            >
              Fancy app you got here
            </Styled(Link)>
          </styled.nav>
        </styled.div>
      </styled.div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <Link
            replace={false}
            to="/"
          >
            <BannerLogoSvg
              color="#fff"
              hoverColor="#2ecc71"
              size="4rem"
            />
          </Link>
          <styled.nav>
            <Styled(Link)
              to="/fancy"
            >
              Fancy app you got here
            </Styled(Link)>
          </styled.nav>
        </styled.div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Link
              replace={false}
              to="/"
            >
              <BannerLogoSvg
                color="#fff"
                hoverColor="#2ecc71"
                size="4rem"
              />
            </Link>,
            <styled.nav>
              <Styled(Link)
                to="/fancy"
              >
                Fancy app you got here
              </Styled(Link)>
            </styled.nav>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <BannerLogoSvg
                color="#fff"
                hoverColor="#2ecc71"
                size="4rem"
              />,
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "#fff",
                "hoverColor": "#2ecc71",
                "size": "4rem",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(Link)
                  to="/fancy"
                >
                  Fancy app you got here
                </Styled(Link)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "children": "Fancy app you got here",
                  "to": "/fancy",
                },
                "ref": null,
                "rendered": "Fancy app you got here",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <styled.div>
            <Link
              replace={false}
              to="/"
            >
              <BannerLogoSvg
                color="#fff"
                hoverColor="#2ecc71"
                size="4rem"
              />
            </Link>
            <styled.nav>
              <Styled(Link)
                to="/fancy"
              >
                Fancy app you got here
              </Styled(Link)>
            </styled.nav>
          </styled.div>
        </styled.div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            <Link
              replace={false}
              to="/"
            >
              <BannerLogoSvg
                color="#fff"
                hoverColor="#2ecc71"
                size="4rem"
              />
            </Link>
            <styled.nav>
              <Styled(Link)
                to="/fancy"
              >
                Fancy app you got here
              </Styled(Link)>
            </styled.nav>
          </styled.div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Link
                replace={false}
                to="/"
              >
                <BannerLogoSvg
                  color="#fff"
                  hoverColor="#2ecc71"
                  size="4rem"
                />
              </Link>,
              <styled.nav>
                <Styled(Link)
                  to="/fancy"
                >
                  Fancy app you got here
                </Styled(Link)>
              </styled.nav>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <BannerLogoSvg
                  color="#fff"
                  hoverColor="#2ecc71"
                  size="4rem"
                />,
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "color": "#fff",
                  "hoverColor": "#2ecc71",
                  "size": "4rem",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(Link)
                    to="/fancy"
                  >
                    Fancy app you got here
                  </Styled(Link)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "children": "Fancy app you got here",
                    "to": "/fancy",
                  },
                  "ref": null,
                  "rendered": "Fancy app you got here",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
